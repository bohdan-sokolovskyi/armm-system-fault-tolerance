/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.lab;

import com.lab.systemModel.SystemModel;
import com.lab.systemModel.SystemStateVector;

public class App {

    final static double[] P = new double[5]; // P[0] = probabily of system live when 0 erros; P[1] = when 1 errors and so on;
    static SystemModel systemModel;
    static SystemStateVector ssv;

    public static void main(String[] args) {
        testInitialSystem();
        //testModifiedSystem();
    }

    private static void testInitialSystem(){
        System.out.println("Test of Initial System");
        systemModel = SystemModel.createInitialSystem();
        ssv = SystemStateVector.createForInitialSystem();
        common();
    }

    private static void testModifiedSystem(){
        System.out.println("Test of Modified System");
        systemModel = SystemModel.createModifiedSystem();
        ssv = SystemStateVector.createForModifiedSystem();
        common();
    }

    private static void common(){
        test0Errors();
        test1Errors();
        test2Errors();
        test3Errors();
        test4Errors();
        System.out.println(systemModel.getFailedElementsStatistics());
        printP();
    }

    private static void test0Errors(){
        ssv.setAllTrue();
        SystemModel.TestSSVResult res = systemModel.testSystemStateVector(ssv);
        P[0] = res.ssvProbabilty;
    }

    private static void test1Errors(){
        for(int i = 0; i < systemModel.getElementsCount(); i++){
            ssv.setAllTrue();
            ssv.setToFalse(i);
            SystemModel.TestSSVResult res = systemModel.testSystemStateVector(ssv);
            if(res.isSystemLive) {
                P[1] += res.ssvProbabilty;
            }
        }
    }

    private static void test2Errors(){
        for(int i = 0; i < systemModel.getElementsCount() - 1; i++) {
            for (int j = i + 1; j < systemModel.getElementsCount(); j++) {
                ssv.setAllTrue();
                ssv.setToFalse(i);
                ssv.setToFalse(j);
                SystemModel.TestSSVResult res = systemModel.testSystemStateVector(ssv);
                if (res.isSystemLive) {
                    P[2] += res.ssvProbabilty;
                }
            }
        }
    }

    private static void test3Errors(){
        //TODO create this Bohdan )
    }

    private static void test4Errors(){
        //TODO create this also )
    }

    private static void printP(){
        System.out.println("P[0] = " + P[0]);
        System.out.println("P[1] = " + P[1]);
        System.out.println("P[2] = " + P[2]);
        System.out.println("P[3] = " + P[3]);
        System.out.println("P[4] = " + P[4]);
    }
}
